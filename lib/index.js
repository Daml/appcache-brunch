// Generated by CoffeeScript 1.6.2
var AppCachePlugin, fs, sysPath;

fs = require('fs');

sysPath = require('path');

module.exports = AppCachePlugin = (function() {
  AppCachePlugin.prototype.brunchPlugin = true;

  function AppCachePlugin(config) {
    this.config = config;
    this.path = sysPath.join(this.config.paths["public"], 'appcache.appcache');
    Object.freeze(this);
  }

  AppCachePlugin.prototype.onCompile = function(generatedFiles) {
    var compilationTime, re,
      _this = this;

    re = /\n# Compilation time: [TZ\d\-:.]+\n/;
    compilationTime = "\n# Compilation time: " + (new Date().toISOString()) + "\n";
    return fs.exists(this.path, function(exists) {
      if (!exists) {
        return;
      }
      return fs.readFile(_this.path, function(error, buffer) {
        var data, newData;

        if (error != null) {
          return console.log(error);
        }
        data = buffer.toString();
        newData = data.match(re) ? data.replace(re, compilationTime) : data + compilationTime;
        return fs.writeFile(_this.path, newData, function(error) {
          if (error != null) {
            return console.log(error);
          }
        });
      });
    });
  };

  return AppCachePlugin;

})();
